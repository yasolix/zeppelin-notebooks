{"paragraphs":[{"text":"sc.version","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860114_1421701039","id":"20180129-070217_1992482641","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:63244"},{"text":"%md\n# Kredi Risk Değerlendirme (Veri Analizi ve Makine Öğrenimi)\n## Amaç ve Kapsam\nBu çalışma kapsamında banka  müşterilerinin kredi riskini analiz edeceğiz. Bir müşterinin kişisel bilgileri ile geçmiş banka kayıtları verilerini birleştirerek kredi borcunu zamanında kapatıp kapatması arasındaki ilişkiyi analiz etmeye çalışacağız.\nAçık kaynaklı veriler kullanacağız","dateUpdated":"2018-02-09T10:25:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860114_1421701039","id":"20180209-065244_1919907560","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63245"},{"text":"%md\n## Verilerin Toplanması\nYeh ve Lien (2009) tarafından kredi riskini değerlendirmek amacıyla kullanılan bir veri setini http://archive.ics.uci.edu/ml/datasets/default+of+credit+card+clients paylaşmış durumdadır. Tayvan daki banka müşterilerinin kredi risk değerlenmesi üzerine yapılan biir araştırmanın parçası olarak yayınlanmıştır.\n\nVeriler etiketlidir , bu yüzden güdümlü öğrenme teknikleri kullanılacaktır.\n\n* Güdümlü öğrenme kullanarak ve müşterilerin 6 aylık örüntülerine bakarak kredi ödemesinde sıkıntı olacak müşterileri tahmin edeceğiz.\n* Veri setini inceleyerek yeni öznitelikler türeteceğiz.\n* Kullandığımız yöntemlerin başarısını inceleyeceğiz.\n","dateUpdated":"2018-02-09T10:25:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860115_1421316290","id":"20180129-070705_1977193348","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63246"},{"text":"%sh\npwd\nmkdir ./veri/\nwget http://archive.ics.uci.edu/ml/machine-learning-databases/00350/default%20of%20credit%20card%20clients.xls -O ./veri/default-of-credit-card-clients.xls \n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860115_1421316290","id":"20180206-120306_172708787","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63247"},{"text":"%md\nExcel dosyaları okuma paketleri henüz  Apache Spark repository sine eklenmediği için xls dosyalrını , csv dosyalarına dönüştürmek gerekir. Bu arada veriyi eğtiim ve test kümesi olarak da ayırabilirz.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860116_1419392546","id":"20180209-065115_1273040562","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63248"},{"text":"%sh\nwget https://safirdepo.b3lab.org/shares/public/share/ZRIm14IrTlOK35cE1C9Yc7N52RFMyeuf/Credit_Scoring_train.csv -O ./veri/Credit_Scoring_train.csv\nwget https://safirdepo.b3lab.org/shares/public/share/ZRIm14IrTlOK35cE1C9Yc7N52RFMyeuf/Credit_Scoring_test.csv -O ./veri/Credit_Scoring_test.csv","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860116_1419392546","id":"20180206-122159_1751951940","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63249"},{"text":"%sh\nls ./veri/credit","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860117_1419007797","id":"20180129-070222_8932852","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63250"},{"text":"%sh\n# Eğer veriyi HDFS e aktaracaksak aşağıdaki komutlar çalıştırılır\n\nhdfs dfs -put ./veri/Credit_Scoring_train.csv /tmp/\nhdfs dfs -put ./veri/Credit_Scoring_test.csv /tmp/\nhdfs dfs -ls /tmp","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860117_1419007797","id":"20180209-102035_408758879","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63251"},{"text":"%pyspark\n#HDFS\ntrainfilehdfs = \"/tmp/Credit_Scoring_train.csv\"\ntestfilehdfs = \"/tmp/Credit_Scoring_test.csv\"\n\n#Lokal veri\ntrainfile = \"./veri/Credit_Scoring_train.csv\"\ntestfile = \"./veri/Credit_Scoring_test.csv\"\n\ntrain_df = spark.read.csv(trainfile,header='true',sep=\";\")\ntest_df = spark.read.csv(testfile,header='true',sep=\";\")","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860118_1420162043","id":"20180129-070241_61522489","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63252"},{"text":"%md\nYüklediğimiz verisetlerini inceleyelim\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860118_1420162043","id":"20180209-065952_2031114879","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63253"},{"text":"%pyspark\n\ntrain_df.show(5)\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860119_1419777295","id":"20180129-070431_656584896","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63254"},{"text":"%pyspark\ntest_df.show(5)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860119_1419777295","id":"20180129-070504_1965748201","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63255"},{"text":"%pyspark\nfeatures = train_df.columns\nprint(features)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860120_1417853550","id":"20180129-075026_1652905159","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63256"},{"text":"%pyspark\nprint(train_df.count(), test_df.count())","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860120_1417853550","id":"20180129-072437_369780122","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63257"},{"text":"%md\n## Veri Sözlüğü\n\nVeride aşağıdaki kolonlar yer almaktadır:\n\n* CUSTOMER_ID: Müşteriye özel ID.\n* LIMIT_BAL: Kredi limiti.\n* SEX: Cinsiyet (Male, Female). \n* EDUCATION: Eğitim (Gradschool, University, Highschool). \n* MARRIAGE: Medeni durum (Married, Single). \n* AGE: Yaş (year). \n* PAYMENT_1 - PAYMENT_6: Ay bazında geçmiş ödemelerdeki gecikme (1 - Eylül 2005, 6 - Nisan 2005 olacak şekilde).\n* REMAINING_AMOUNT_1 - REMAINING_AMOUNT_6: Kalan borç miktarı (1 - Eylül 2005, 6 - Nisan 2005 olacak şekilde).\n* PAYMENT_AMOUNT_1 - PAYMENT_AMOUNT_6: Önceki ödemeler (1 - Eylül 2005, 6 - Nisan 2005 olacak şekilde).\n* default: Çıktı değeri, borcun zamanında ödenip ödenmediği (0 = Zamanında, 1 = Geç)\n\n\nÖnce sayısal kolonlara bakarak eksik değer olup olmadığına bakalım.","dateUpdated":"2018-02-09T10:25:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860120_1417853550","id":"20180129-070700_1108952052","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63258"},{"text":"%md\n## Veri Tiplerinin düzenlenmesi / dönüştürülmesi\n\nSayısal olan verilerin eğer değilse uygun tiplere dönüştürülmesi gereklidir.\nAşağıda rasyonel sayılar, csv vb dosyalarda  karakter dizini olarak yazıldıklarında, okunduktan sonra da karakter dizininden rasyonel sayılara dönüştürülmeleri gerekir.\nBazı okuyuculara hangi kolonların dönüştürülmeis gerektiği belirtildiğinde, otomatk dönüşüm yapar. bu örnekte kendimiz dönüşüm yapacağız.","dateUpdated":"2018-02-09T10:25:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860121_1417468801","id":"20180129-071303_1521962791","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63259"},{"text":"%pyspark\ntrain_df.schema","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860121_1417468801","id":"20180206-093749_515501949","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63260"},{"text":"%pyspark\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.functions import col , column\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.types import FloatType\nfrom pyspark.sql.types import StringType\nfrom pyspark.sql.types import IntegerType \n\ntoIntegerfunc = udf( lambda x: int(x) if x else int(0), IntegerType())\ntoFloatfunc = udf( lambda x: float(x) if x else float(0), FloatType())\ntoStringfunc = udf( lambda x: x if x else \"other\", StringType())\n\n\ntrain_df = train_df.withColumn(\"LIMIT_BAL\",toFloatfunc(train_df['LIMIT_BAL']))\ntrain_df = train_df.withColumn(\"AGE\",toIntegerfunc(train_df['AGE']))\n\ntrain_df = train_df.withColumn(\"PAYMENT_1\",toFloatfunc(train_df['PAYMENT_1']))\ntrain_df = train_df.withColumn(\"PAYMENT_2\",toFloatfunc(train_df['PAYMENT_2']))\ntrain_df = train_df.withColumn(\"PAYMENT_3\",toFloatfunc(train_df['PAYMENT_3']))\ntrain_df = train_df.withColumn(\"PAYMENT_4\",toFloatfunc(train_df['PAYMENT_4']))\ntrain_df = train_df.withColumn(\"PAYMENT_5\",toFloatfunc(train_df['PAYMENT_5']))\ntrain_df = train_df.withColumn(\"PAYMENT_6\",toFloatfunc(train_df['PAYMENT_6']))\n\ntrain_df = train_df.withColumn(\"REMAINING_AMOUNT_1\",toFloatfunc(train_df['REMAINING_AMOUNT_1']))\ntrain_df = train_df.withColumn(\"REMAINING_AMOUNT_2\",toFloatfunc(train_df['REMAINING_AMOUNT_2']))\ntrain_df = train_df.withColumn(\"REMAINING_AMOUNT_3\",toFloatfunc(train_df['REMAINING_AMOUNT_3']))\ntrain_df = train_df.withColumn(\"REMAINING_AMOUNT_4\",toFloatfunc(train_df['REMAINING_AMOUNT_4']))\ntrain_df = train_df.withColumn(\"REMAINING_AMOUNT_5\",toFloatfunc(train_df['REMAINING_AMOUNT_5']))\ntrain_df = train_df.withColumn(\"REMAINING_AMOUNT_6\",toFloatfunc(train_df['REMAINING_AMOUNT_6']))\n\ntrain_df = train_df.withColumn(\"PAYMENT_AMOUNT_1\",toFloatfunc(train_df['PAYMENT_AMOUNT_1']))\ntrain_df = train_df.withColumn(\"PAYMENT_AMOUNT_2\",toFloatfunc(train_df['PAYMENT_AMOUNT_2']))\ntrain_df = train_df.withColumn(\"PAYMENT_AMOUNT_3\",toFloatfunc(train_df['PAYMENT_AMOUNT_3']))\ntrain_df = train_df.withColumn(\"PAYMENT_AMOUNT_4\",toFloatfunc(train_df['PAYMENT_AMOUNT_4']))\ntrain_df = train_df.withColumn(\"PAYMENT_AMOUNT_5\",toFloatfunc(train_df['PAYMENT_AMOUNT_5']))\ntrain_df = train_df.withColumn(\"PAYMENT_AMOUNT_6\",toFloatfunc(train_df['PAYMENT_AMOUNT_6']))\n\ntrain_df = train_df.withColumn(\"default\",toIntegerfunc(train_df['default']))\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860122_1418623048","id":"20180129-112831_1672017812","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63261"},{"text":"%pyspark\ntrain_df.schema","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860122_1418623048","id":"20180206-094407_1713907897","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63262"},{"text":"%pyspark\ntrain_df.describe().show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860123_1418238299","id":"20180129-113613_155775850","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63263"},{"text":"%pyspark\ntrain_df.describe(['LIMIT_BAL']).show()\ntrain_df.describe(['AGE']).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860123_1418238299","id":"20180129-071508_743470658","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63264"},{"text":"%pyspark\ntrain_df.describe([i for i in train_df.columns if 'REMAINING_AMOUNT' in i]).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860124_1416314554","id":"20180129-074702_1075895076","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63265"},{"text":"%pyspark\ntrain_df.describe([i for i in train_df.columns if 'PAYMENT' in i]).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860124_1416314554","id":"20180129-074910_1748773988","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63266"},{"text":"%pyspark\ntrain_df.createOrReplaceTempView(\"traindatatable\")","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860125_1415929806","id":"20180206-094721_2052957626","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63267"},{"text":"%md\n##  Veri İnceleme / Değerlendirme\nVerinin özelliklere göre nasıl bir dağılım gösterdiğini inceleyelim. \nKredi limiti, yaş, eğitim, medeni durum ve cinsiyete göre verideki dağılımı sayaçlar ile inceleyebiliriz.\n\nBU dağılımlar hakkında bazı gözlemler yapabilirsiniz.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860125_1415929806","id":"20180206-124549_494611162","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63268"},{"text":"%sql\nselect LIMIT_BAL,count(*) from traindatatable group by LIMIT_BAL\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860126_1417084052","id":"20180206-095603_1849066644","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63269"},{"text":"%sql\nselect AGE,count(*) from traindatatable group by AGE","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860126_1417084052","id":"20180206-122927_792390280","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63270"},{"text":"%sql\nselect * from traindatatable ","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860127_1416699303","id":"20180206-124524_1199846551","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63271"},{"text":"%sql\nselect AGE,EDUCATION,count(*)   from traindatatable group by AGE, EDUCATION\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"stackedAreaChart":{"style":"stack"},"multiBarChart":{"stacked":true},"lineChart":{"lineWithFocus":true}},"commonSetting":{},"keys":[{"name":"AGE","index":0,"aggr":"sum"}],"groups":[{"name":"EDUCATION","index":1,"aggr":"sum"}],"values":[{"name":"count(1)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860130_1403233092","id":"20180206-095758_2064853398","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63272"},{"text":"%sql\nselect AGE,count(*) from traindatatable group by AGE\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860131_1402848343","id":"20180206-122600_1834159422","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63273"},{"text":"%sql\nselect AGE,EDUCATION,MARRIAGE, count(*)  from traindatatable where default=1 group by AGE, EDUCATION,MARRIAGE\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"stackedAreaChart":{"style":"stack"},"multiBarChart":{},"lineChart":{}},"commonSetting":{},"keys":[{"name":"AGE","index":0,"aggr":"sum"}],"groups":[{"name":"MARRIAGE","index":2,"aggr":"sum"},{"name":"EDUCATION","index":1,"aggr":"sum"}],"values":[{"name":"count(1)","index":3,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860131_1402848343","id":"20180206-123454_1748094322","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63274"},{"text":"%sql\nselect REMAINING_AMOUNT_1,REMAINING_AMOUNT_2, REMAINING_AMOUNT_3,REMAINING_AMOUNT_4,REMAINING_AMOUNT_5,REMAINING_AMOUNT_6 from traindatatable where default == 1 ","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"setting":{"scatterChart":{},"multiBarChart":{},"lineChart":{},"stackedAreaChart":{}},"commonSetting":{},"keys":[],"groups":[],"values":[]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860132_1400924598","id":"20180206-100231_1964359377","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63275"},{"text":"%md\n## SORU -1 \nSiz de veride yaşa ve evlilik durumuna göre limit in dağılımını incleyeiniz.\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860133_1400539850","id":"20180209-070044_998719628","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63276"},{"text":"%sql\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860134_1401694096","id":"20180209-070039_623717100","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63277"},{"text":"%md\n## Veri Temizleme / Dönüştürme\nVeriyi incelerken fark edilen durumları düzeltmek için bazı işlemler yapacağız.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860134_1401694096","id":"20180206-124808_1976601910","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63278"},{"text":"%pyspark\n# LIMIT_BAL değeri boş olan kolonları siliyoruz\n\ntrain_df = train_df.filter(train_df['LIMIT_BAL']>0)\ntrain_df.describe(['LIMIT_BAL']).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860135_1401309347","id":"20180129-074947_578463666","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63279"},{"text":"%pyspark\n#AGE kolonunu median değeriyle dolduruyoruz. Missing değer ve strategy (nasıl dolduracağımız) bilgisini verelim.\n\nmedian_dict = dict()\nmedian_dict['AGE'] = train_df.stat.approxQuantile('AGE', [0.5], 0.001)[0]\nprint(median_dict)\ntrain_df = train_df.na.fill(median_dict)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860135_1401309347","id":"20180129-075058_2105229975","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63280"},{"text":"%pyspark\n#  null(olmayan)  değerlerler var mı ?\ntrain_df.describe(['SEX']).show()\ntrain_df.describe(['EDUCATION']).show()\ntrain_df.describe(['MARRIAGE']).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860136_1399385603","id":"20180129-081235_388098480","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63281"},{"text":"%pyspark\n# null değerler için yeni bir değer yazalım\nna_dict = dict()\nna_dict['EDUCATION'] = 'MISSING_EDU'\nna_dict['MARRIAGE'] = 'MISSING_MAR'\n\ntrain_df = train_df.fillna(na_dict)\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860136_1399385603","id":"20180129-083649_804034101","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63282"},{"text":"%pyspark\ntrain_df.describe(['SEX']).show()\ntrain_df.describe(['EDUCATION']).show()\ntrain_df.describe(['MARRIAGE']).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860137_1399000854","id":"20180129-113716_619463756","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63283"},{"text":"%pyspark\ntrain_df.show(3)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860137_1399000854","id":"20180129-084039_551893393","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63284"},{"text":"%pyspark\ntrain_df.createOrReplaceTempView(\"traindatatable2\")","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860138_1400155101","id":"20180206-125256_112879056","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63285"},{"text":"%md\n## Veri değerlendirme (tekrar)\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860138_1400155101","id":"20180206-125336_155753668","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63286"},{"text":"%sql\nselect * from traindatatable2","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false},"stackedAreaChart":{"style":"stack"}},"commonSetting":{},"keys":[{"name":"AGE","index":5,"aggr":"sum"}],"groups":[{"name":"EDUCATION","index":3,"aggr":"sum"},{"name":"MARRIAGE","index":4,"aggr":"sum"}],"values":[{"name":"default","index":24,"aggr":"count"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860139_1399770352","id":"20180206-125413_1222940354","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63287"},{"text":"%md\n## Makine Öğrenimi ile Risk Değerlendirmesi\nMüşterilerin zamanında mı ödeme yapıp yapmayacaklarını tahmin etmeye çalışalım","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860142_1398616105","id":"20180206-130152_1461168033","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63288"},{"text":"%pyspark\n\n# Hangi kolonlar kullanılacak\n\ncategorical_columns = ['SEX', 'EDUCATION', 'MARRIAGE' ]\nnumerical_columns = ['LIMIT_BAL', 'AGE', 'PAYMENT_1', 'PAYMENT_2', 'PAYMENT_3', 'PAYMENT_4', 'PAYMENT_5', 'PAYMENT_6', 'REMAINING_AMOUNT_1', 'REMAINING_AMOUNT_2', 'REMAINING_AMOUNT_3', 'REMAINING_AMOUNT_4', 'REMAINING_AMOUNT_5', 'REMAINING_AMOUNT_6', 'PAYMENT_AMOUNT_1', 'PAYMENT_AMOUNT_2', 'PAYMENT_AMOUNT_3', 'PAYMENT_AMOUNT_4', 'PAYMENT_AMOUNT_5', 'PAYMENT_AMOUNT_6']\n\n# default kolonu, ismini label olarak değiştirelim\ntrain_df = train_df.withColumnRenamed('default', 'label')\n\ndftrain = train_df.select(categorical_columns + numerical_columns + ['label'] )\ndftrain.show(5)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860143_1398231356","id":"20180129-110800_1027250366","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63289"},{"text":"%md\nSon olarak yeni öznitelikler türetelim. \n\n* Müşterilerin kredi limitleri oldukça önemli bir bilgi gibi duruyor. Büyük olasılıkla yaşlandıkça limitiniz de artacak.  'LIMIT_PER_AGE' adlı bir kolonla limiti yaşa bölerek yeni bir değişken oluşturalım. Bu sayede aynı limite sahip iki müşteriden daha genç olanını ayırdedebileceğimiz bir değişken oluşturuyoruz. Genç ve yüksek limitli bir müşteri daha cazip bir müşteri olabilir.\n* Aynı zamanda bankaya olan borcunuzla maddi durumunuzun da ilişkisini kurmak yararlı olabilir. Aynı borca sahip iki müşteriden limiti daha yüksek olan daha az riskli bir müşteri olabilir. REMAINING_AMOUNT_1 kolonunu LIMIT_BAL kolununa bölerek yeni bir değişken türetelim.\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860143_1398231356","id":"20180129-110723_2027256050","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63290"},{"text":"%pyspark\n\nMaletoBinaryfunc = udf( lambda x: int(1) if 'Male' in x else int(0) )\nFemaletoBinaryfunc = udf( lambda x: int(1) if 'Female' in x else int(0) )\n\n#Yeni değişkenler oluşturuyoruz.\ndftrain= dftrain.withColumn('LIMIT_PER_AGE', dftrain['LIMIT_BAL'] / dftrain['AGE'])\ndftrain= dftrain.withColumn('RELATIVE_REMAINING_AMOUNT',  dftrain['REMAINING_AMOUNT_1'] / dftrain['LIMIT_BAL'])\n#dftrain = dftrain.withColumn('MALE', MaletoBinaryfunc(dftrain['SEX']))\n#dftrain = dftrain.withColumn('FEMALE', FemaletoBinaryfunc(dftrain['SEX']))\n\nnumerical_columns.append('LIMIT_PER_AGE')\nnumerical_columns.append('RELATIVE_REMAINING_AMOUNT')\n#if 'SEX' in categorical_columns:\n#    categorical_columns.remove('SEX')\n#    categorical_columns.append('MALE')\n#    categorical_columns.append('FEMALE')\n\nprint(categorical_columns)\n\nprint(numerical_columns)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860144_1408619576","id":"20180129-110718_570085056","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63291"},{"text":"%pyspark\ndftrain.schema","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860144_1408619576","id":"20180208-055316_2102427753","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63292"},{"text":"%pyspark\ndftrain.show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860145_1408234828","id":"20180130-073302_1203832284","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63293"},{"text":"%pyspark\ndftrain.describe().show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860145_1408234828","id":"20180129-113349_388667269","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63294"},{"text":"%md\n### Pipeline \nKategorik ve sayısal özelliklerin modele uygun veritiplerine dönüştürülmesi için bir pipeline oluşturulur.\nBir pipeline (boru hattı), genellikle bir dizi **transformer** ve **estimator** aşamasından sonra bir DataFrame hazırlayan işlemlerden oluşur.\nArdından modelleme ve ardından tahmini bir modeli eğitme işlemeleri yapılır.\n\n- **StringIndexer** kategorik özellikleri dizinlere dönüştüren bir dönüştürücü\n- **VectorAssembler** Kategorik özellikleri tek bir vektöre birleştiren bir birleştirici\n- **VectorIndexer** Bir kategorik özellik vektörü için dizinler oluşturan dönüştürücü\n- **VectorAssembler**, sürekli sayısal özellikler içeren bir vektör oluşturan birleştirici\n- **MinMaxScaler** Sürekli sayısal özellikleri normalleştiren bir dönüştürücü\n- **VectorAssembler** Kategorik ve sürekli özellikler içeren bir vektör oluşturan bir birleştirici\n- Sınıflandırma modelini eğiten bir **DecisionTreeClassifier**.\n\n### Sınıflandırma \nÖnce karar ağacı ile sınıflandırma yapacağız. Bu sınıflandırmayı pipeline bir parçası olarak uygulayacağız\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860146_1409389074","id":"20180208-055847_1602970818","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63295"},{"text":"%pyspark\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import *\n\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.classification import DecisionTreeClassifier\nfrom pyspark.ml.feature import VectorAssembler, StringIndexer, VectorIndexer, MinMaxScaler\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860146_1409389074","id":"20180208-054540_1150367843","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63296"},{"text":"%pyspark\ndftrain.show(2)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860147_1409004325","id":"20180208-064302_1415589525","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63297"},{"text":"%pyspark\n\n#kategorik özellikleri indeksliyoruz\nedustrIdx  = StringIndexer(inputCol='EDUCATION', outputCol= 'EDUCATIONIdx') \nmarstrIdx  = StringIndexer(inputCol='MARRIAGE', outputCol= 'MARRIAGEIdx') \nsexstrIdx  = StringIndexer(inputCol='SEX', outputCol= 'SEXIdx') \n\n#indexleri vector haline getiriyoruz\ncatVect = VectorAssembler(inputCols =['EDUCATIONIdx', 'MARRIAGEIdx', 'SEXIdx' ]  , outputCol=\"catFeatures\")\n\n#kategorik veri içeren vektorü indeksliyoruz\ncatIdx = VectorIndexer(inputCol = catVect.getOutputCol(), outputCol = \"idxCatFeatures\")\n\n#sayısal veri içeren özellikleri vektör haline getiriyoruz\nnumVect = VectorAssembler(inputCols = ['LIMIT_BAL','PAYMENT_1','REMAINING_AMOUNT_1', 'PAYMENT_AMOUNT_1' ], outputCol=\"numFeatures\")\n\n#sayısal veriler üzerinde normallizasyon işlemi ile değerleri belirlenen bir aralığa dönüştürüyoruz\nminMax = MinMaxScaler(inputCol = numVect.getOutputCol(), outputCol=\"normFeatures\")\n\n#kategorik ve sayısal verileri birleştiren bir vektör oluşturuyoruz\nfeatVect = VectorAssembler(inputCols=[\"idxCatFeatures\", \"normFeatures\"], outputCol=\"features\")\n\ndt = DecisionTreeClassifier(labelCol=\"label\", featuresCol=\"features\")\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860147_1409004325","id":"20180208-055454_1401940463","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63298"},{"text":"%pyspark\n\nall_stages = [edustrIdx, marstrIdx, sexstrIdx, catVect, catIdx, numVect, minMax, featVect, dt]\n\npipeline = Pipeline(stages=all_stages)\n\npipelineModel = pipeline.fit(dftrain)\n\nprint \"Pipeline complete!\"","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860147_1409004325","id":"20180208-064100_2071677742","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63299"},{"text":"%md\n## Test verisi dönüştürme\n\nEğitim/Train setinde yaptığımız dönüşümleri test seti üzerinde de yapacağız.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860148_1407080581","id":"20180208-074718_1728031826","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63300"},{"text":"%pyspark\n# Aynı işlemleri test üzerinde de yapıyoruz\n\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.functions import col , column\nfrom pyspark.sql.types import DoubleType \nfrom pyspark.sql.types import StringType\nfrom pyspark.sql.types import IntegerType \n\ntoIntegerfunc = udf( lambda x: int(x) if x else int(0), IntegerType())\ntoDoublefunc = udf( lambda x: float(x) if x else float(0), DoubleType())\ntoStringfunc = udf( lambda x: x if x else \"other\", StringType())\n\n\ntest_df = spark.read.csv(testfile,header='true',sep=\";\")\n\ntest_df = test_df.withColumn(\"LIMIT_BAL\",toIntegerfunc(test_df['LIMIT_BAL']))\ntest_df = test_df.withColumn(\"AGE\",toIntegerfunc(test_df['AGE']))\n\ntest_df = test_df.withColumn(\"PAYMENT_1\",toIntegerfunc(test_df['PAYMENT_1']))\ntest_df = test_df.withColumn(\"PAYMENT_2\",toIntegerfunc(test_df['PAYMENT_2']))\ntest_df = test_df.withColumn(\"PAYMENT_3\",toIntegerfunc(test_df['PAYMENT_3']))\ntest_df = test_df.withColumn(\"PAYMENT_4\",toIntegerfunc(test_df['PAYMENT_4']))\ntest_df = test_df.withColumn(\"PAYMENT_5\",toIntegerfunc(test_df['PAYMENT_5']))\ntest_df = test_df.withColumn(\"PAYMENT_6\",toIntegerfunc(test_df['PAYMENT_6']))\n\ntest_df = test_df.withColumn(\"REMAINING_AMOUNT_1\",toIntegerfunc(test_df['REMAINING_AMOUNT_1']))\ntest_df = test_df.withColumn(\"REMAINING_AMOUNT_2\",toIntegerfunc(test_df['REMAINING_AMOUNT_2']))\ntest_df = test_df.withColumn(\"REMAINING_AMOUNT_3\",toIntegerfunc(test_df['REMAINING_AMOUNT_3']))\ntest_df = test_df.withColumn(\"REMAINING_AMOUNT_4\",toIntegerfunc(test_df['REMAINING_AMOUNT_4']))\ntest_df = test_df.withColumn(\"REMAINING_AMOUNT_5\",toIntegerfunc(test_df['REMAINING_AMOUNT_5']))\ntest_df = test_df.withColumn(\"REMAINING_AMOUNT_6\",toIntegerfunc(test_df['REMAINING_AMOUNT_6']))\n\ntest_df = test_df.withColumn(\"PAYMENT_AMOUNT_1\",toIntegerfunc(test_df['PAYMENT_AMOUNT_1']))\ntest_df = test_df.withColumn(\"PAYMENT_AMOUNT_2\",toIntegerfunc(test_df['PAYMENT_AMOUNT_2']))\ntest_df = test_df.withColumn(\"PAYMENT_AMOUNT_3\",toIntegerfunc(test_df['PAYMENT_AMOUNT_3']))\ntest_df = test_df.withColumn(\"PAYMENT_AMOUNT_4\",toIntegerfunc(test_df['PAYMENT_AMOUNT_4']))\ntest_df = test_df.withColumn(\"PAYMENT_AMOUNT_5\",toIntegerfunc(test_df['PAYMENT_AMOUNT_5']))\ntest_df = test_df.withColumn(\"PAYMENT_AMOUNT_6\",toIntegerfunc(test_df['PAYMENT_AMOUNT_6']))\n\ntest_df = test_df.withColumn(\"default\",toIntegerfunc(test_df['default']))\n\ntest_df = test_df.filter(test_df['LIMIT_BAL']>0)\n\nmedian_dict = dict()\nmedian_dict['AGE'] = test_df.stat.approxQuantile('AGE', [0.5], 0.001)[0]\ntest_df = test_df.na.fill(median_dict)\n\ntest_df = test_df.fillna(na_dict)\n\ntest_df= test_df.withColumn('LIMIT_PER_AGE', test_df['LIMIT_BAL'] / test_df['AGE'])\ntest_df= test_df.withColumn('RELATIVE_REMAINING_AMOUNT',  test_df['REMAINING_AMOUNT_1'] / test_df['LIMIT_BAL'])\n\ntest_df= test_df.withColumn('trueLabel', test_df['default'])\n\ndftest = test_df.select(categorical_columns + numerical_columns + ['trueLabel'])\n\ndftest.show(3)\n\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860148_1407080581","id":"20180129-111032_1710231101","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63301"},{"text":"%md\n## Test Verisinde Tahmin Yapılması\nEğitim seti ile oluşturduğumuz pipeline dan test setini geçiriyoruz ve tahmini sonuçlar ile gerçek sonuçları karşılaştırıyoruz.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860149_1406695832","id":"20180208-075722_1545430830","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63302"},{"text":"%pyspark\nprediction = pipelineModel.transform(dftest)\npredicted = prediction.select(\"features\", \"prediction\", \"trueLabel\")\npredicted.show(100, truncate=False)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860149_1406695832","id":"20180208-075301_1024137291","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63303"},{"text":"%md\n## Tahmin performansının ölçümü\n\nTest verisini üzerinde tahminimizin ne kadar doğru olduğunu ölçüyoruz. **Accuracy** , **Precision** ve **Recall** değerleri hedeflerdiğimiz değerlere ulaşıp ulaşmadığını ölçüyoruz.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860149_1406695832","id":"20180129-115805_151814926","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63304"},{"text":"%pyspark\n\ntp = float(predicted.filter(\"prediction == 1.0 AND truelabel == 1\").count())\nfp = float(predicted.filter(\"prediction == 1.0 AND truelabel == 0\").count())\ntn = float(predicted.filter(\"prediction == 0.0 AND truelabel == 0\").count())\nfn = float(predicted.filter(\"prediction == 0.0 AND truelabel == 1\").count())\nmetrics = spark.createDataFrame([\n (\"TP\", tp),\n (\"FP\", fp),\n (\"TN\", tn),\n (\"FN\", fn),\n (\"Accuracy\", (tp + tn) / (tp+fp+tn+fn) ),\n (\"Precision\", tp / (tp + fp)),\n (\"Recall\", tp / (tp + fn))],[\"metric\", \"value\"])\nmetrics.show()\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860150_1407850079","id":"20180129-084049_345083009","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63305"},{"text":"%md\nTahmin değerlerinin  ham halleri ve hesaplanan olasılık değerleri de incelenebilir.\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860150_1407850079","id":"20180208-105006_1706983748","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63306"},{"text":"%pyspark\nprediction.select(\"rawPrediction\", \"probability\", \"prediction\", \"trueLabel\").show(100, truncate=False)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860150_1407850079","id":"20180129-120023_1604522843","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63307"},{"text":"%md\n**ROC**  metriğinde alanın ne kadar olduğu hesaplanabilir. ***Area Under ROC*** ( **AUR** ) değerleri farklı modeller için karşılaştırıldığında, AUR büyük olan model daha başarılıdır.\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860151_1407465330","id":"20180208-123938_1057382255","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63308"},{"text":"%pyspark\nevaluator = BinaryClassificationEvaluator(labelCol=\"trueLabel\", rawPredictionCol=\"rawPrediction\", metricName=\"areaUnderROC\")\naur = evaluator.evaluate(prediction)\nprint \"AUR = \", aur\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860151_1407465330","id":"20180208-124011_1958374778","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63309"},{"text":"%pyspark\n# prototip tahminleyici modelimizi kaydedelim.\nmodel_path = \"/tmp\"\ndt.save(dtc_path)\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860152_1405541585","id":"20180208-163827_2027615947","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63310"},{"text":"%pyspark\n\n#tek bir hayali müşteri için tahmin yapalım\n\ntest0 = spark.createDataFrame([('Male','Gradschool', 'Single', 10000,44, 0, 0, 0, 0, 0, 0, 8958, 8774, 9461, 9457, 9650, 7500, 1147, 1224, 1000, 193, 150, 0,227.27272727272728, 0.8958)], \n   [\"SEX\", \"EDUCATION\",\"MARRIAGE\",\"LIMIT_BAL\", \"AGE\",\"PAYMENT_1\",\"PAYMENT_2\",\"PAYMENT_3\",\"PAYMENT_4\",\"PAYMENT_5\",\"PAYMENT_6\",\"REMAINING_AMOUNT_1\",\"REMAINING_AMOUNT_2\",\"REMAINING_AMOUNT_3\",\"REMAINING_AMOUNT_4\",\"REMAINING_AMOUNT_5\",\"REMAINING_AMOUNT_6\",\"PAYMENT_AMOUNT_1\",\"PAYMENT_AMOUNT_2\",\"PAYMENT_AMOUNT_3\",\"PAYMENT_AMOUNT_4\",\"PAYMENT_AMOUNT_5\",\"PAYMENT_AMOUNT_6\", \"LIMIT_PER_AGE\",\"RELATIVE_REMAINING_AMOUNT\"])\n\ntest0.show()\n\nprediction = pipelineModel.transform(test0)\nprediction.select(\"rawPrediction\", \"probability\", \"prediction\").show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860152_1405541585","id":"20180208-131757_411416622","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63311"},{"text":"%md\nPerfromans metriği ölçümü için daha önce yaptığımız işlemleri bir fonksiyonda toparlayalım.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860152_1405541585","id":"20180208-124941_864910557","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63312"},{"text":"%pyspark\n\ndef getMetrics(prediction):\n    tp = float(prediction.filter(\"prediction == 1.0 AND truelabel == 1\").count())\n    fp = float(prediction.filter(\"prediction == 1.0 AND truelabel == 0\").count())\n    tn = float(prediction.filter(\"prediction == 0.0 AND truelabel == 0\").count())\n    fn = float(prediction.filter(\"prediction == 0.0 AND truelabel == 1\").count())\n    \n    metrics = spark.createDataFrame([\n     (\"TP\", tp),\n     (\"FP\", fp),\n     (\"TN\", tn),\n     (\"FN\", fn),\n     (\"Accuracy\", (tp + tn) / (tp+fp+tn+fn) ),\n     (\"Precision\", tp / (tp + fp)),\n     (\"Recall\", tp / (tp + fn))],[\"metric\", \"value\"])\n     \n    return metrics","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860152_1405541585","id":"20180208-124934_481055340","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63313"},{"text":"%md\n## Model / Pipeline İyileştirme \n\nModeli, pipeline ı değiştirerek , daha iyi bir  tahmin performansı elde edebilir miyiz ?","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860153_1405156836","id":"20180208-085542_597796111","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63314"},{"text":"%pyspark\n\n#Kategorik özelikleri daha önceki şekilde yapacağımız için değitrmiyoruz\n#kategorik özellikleri indeksliyoruz\n#edustrIdx  = StringIndexer(inputCol='EDUCATION', outputCol= 'EDUCATIONIdx') \n#marstrIdx  = StringIndexer(inputCol='MARRIAGE', outputCol= 'MARRIAGEIdx') \n#sexstrIdx  = StringIndexer(inputCol='SEX', outputCol= 'SEXIdx') \n\n#indexleri vector haline getiriyoruz\n#catVect = VectorAssembler(inputCols =['EDUCATIONIdx', 'MARRIAGEIdx', 'SEXIdx' ]  , outputCol=\"catFeatures\")\n\n#kategorik veri içeren vektorü indeksliyoruz\n#catIdx = VectorIndexer(inputCol = catVect.getOutputCol(), outputCol = \"idxCatFeatures\")\n\n#sayısal veri içeren özellikleri vektör haline getiriyoruz, bu  özelikleri genişletip daraltabiliri, (feature engineering)\nallnumcols = ['LIMIT_BAL', 'AGE', 'PAYMENT_1', 'PAYMENT_2', 'PAYMENT_3', 'PAYMENT_4', 'PAYMENT_5', 'PAYMENT_6']\n\n#['REMAINING_AMOUNT_1', 'REMAINING_AMOUNT_2', 'REMAINING_AMOUNT_3', 'REMAINING_AMOUNT_4', 'REMAINING_AMOUNT_5', 'REMAINING_AMOUNT_6', 'PAYMENT_AMOUNT_1', 'PAYMENT_AMOUNT_2','PAYMENT_AMOUNT_3', 'PAYMENT_AMOUNT_4', 'PAYMENT_AMOUNT_5', 'PAYMENT_AMOUNT_6'] \n#['LIMIT_PER_AGE', 'RELATIVE_REMAINING_AMOUNT']\n\nnumVect2 = VectorAssembler(inputCols = allnumcols, outputCol=\"numFeatures\")\n\n#sayısal veriler üzerinde normallizasyon işlemi ile değerleri belirlenen bir aralığa dönüştürüyoruz\nminMax2 = MinMaxScaler(inputCol = numVect.getOutputCol(), outputCol=\"normFeatures\")\n\n#kategorik ve sayısal verileri birleştiren bir vektör oluşturuyoruz\nfeatVect2 = VectorAssembler(inputCols=[\"idxCatFeatures\", \"normFeatures\"], outputCol=\"features\")\n\n#Pipeline da sadece dönüştürme işlemleri olacak\nall_transform_stages = [edustrIdx, marstrIdx, sexstrIdx, catVect, catIdx, numVect2, minMax2, featVect2]\n\npipeline_transform = Pipeline(stages=all_transform_stages)\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860153_1405156836","id":"20180208-085534_65866321","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63315"},{"text":"%pyspark\n#Eğitim kümesini dönüştürelim\ndftrain_transform = pipeline_transform.fit(dftrain).transform(dftrain)\n\n#Dönüştürülmüş özelliklerin isimlerini ve değerlerini inceleyelim\ndftrain_transform.show(2)\n#Pipeline sonucunda oluşan özellikleri inceleyelim.\ndftrain_transform.select(['EDUCATIONIdx','MARRIAGEIdx','SEXIdx', 'catFeatures', 'idxCatFeatures', 'numFeatures', 'normFeatures', 'features','label']).show(5)\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860154_1406311083","id":"20180208-090102_2140932052","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63316"},{"text":"%pyspark\n#test verisini de aynı pipeline ile dönüştürelim\ndftest_transform = Pipeline(stages=all_transform_stages).fit(dftest).transform(dftest)\ndftest_transform.show(2)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860154_1406311083","id":"20180208-090826_1803704443","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63317"},{"text":"%md\n## Karar Ağacı ile Sınıflandırma\n\nAyrıntılı bilgi için\nhttp://spark.apache.org/docs/2.1.0/api/python/pyspark.ml.html?highlight=decisiontreeclassifier#pyspark.ml.classification.DecisionTreeClassifier\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860154_1406311083","id":"20180208-090433_814052287","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63318"},{"text":"%pyspark\nfrom pyspark.ml.classification import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier( labelCol=\"label\", featuresCol=\"features\")\n\nmodel = dt.fit(dftrain_transform)\n\nprediction = model.transform(dftest_transform)\n\ngetMetrics(prediction).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860154_1406311083","id":"20180208-080431_34620416","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63319"},{"text":"%md\nKullandığımız Karar ağacının özelliklerini inceleyelim","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860155_1405926334","id":"20180208-130248_168588874","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63320"},{"text":"%pyspark\nprint 'impurity ', dt.getImpurity()\nprint 'Model depth', model.depth\nprint 'Model nodes', model.numNodes\nprint 'Feature Importances', model.featureImportances\nprint 'Number of features', model.numFeatures","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860155_1405926334","id":"20180208-125917_278316490","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63321"},{"text":"%pyspark\nprint(model.toDebugString)","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860155_1405926334","id":"20180208-130129_1232416707","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63322"},{"text":"%pyspark\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860155_1405926334","id":"20180208-131635_43995683","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63323"},{"text":"%md\n### SORU - 1\nKarar ağacında maxDepth parametresini 30 olan bir model oluşturun ve performansını ölçün\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860156_1404002590","id":"20180208-131158_1847683304","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63324"},{"text":"%pyspark\n\nprint(\".....\")\ndt = DecisionTreeClassifier( ..... )\n\nmodel = dt.fit(.....)\n\nprediction = model.transform(....)\n\ngetMetrics(prediction).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860156_1404002590","id":"20180208-131253_129689262","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63325"},{"text":"%md\n### SORU - 2\nDaha fazla özellik seçerek modeli eğitin ve perfromansını ölçün\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860156_1404002590","id":"20180208-133650_759091250","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63326"},{"text":"%pyspark\n\nallnumcols = [....]\n\nnumVect3 = VectorAssembler(inputCols = allnumcols, outputCol=\"numFeatures\")\n\n#sayısal veriler üzerinde normallizasyon işlemi ile değerleri belirlenen bir aralığa dönüştürüyoruz\nminMax3 = MinMaxScaler(inputCol = numVect.getOutputCol(), outputCol=\"normFeatures\")\n\n#kategorik ve sayısal verileri birleştiren bir vektör oluşturuyoruz\nfeatVect3 = VectorAssembler(inputCols=[\"idxCatFeatures\", \"normFeatures\"], outputCol=\"features\")\n\n#Pipeline da sadece dönüştürme işlemleri olacak\nsoru_transform_stages = [....]\n\nsoru_pipeline_transform = Pipeline(stages=......)\n\n#Eğitim kümesini dönüştürelim\nsoru_dftrain_transform = soru_pipeline_transform.fit(...).transform(....)\n\nsoru_dftest_transform = Pipeline(stages=....).fit(...).transform(...)\n\ndt = DecisionTreeClassifier( ..... )\n\nmodel = dt.fit(.....)\n\nprediction = model.transform(....)\n\ngetMetrics(prediction).show()\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860156_1404002590","id":"20180208-133752_1071613491","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63327"},{"text":"%md\n## Lojistik Regresyon ile Sınıflandırma\nAyrıntılı bilgi için \nhttp://spark.apache.org/docs/2.1.0/api/python/pyspark.ml.html?highlight=logisticregression#pyspark.ml.classification.LogisticRegression\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180208-090604_1682663158","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63328"},{"text":"%pyspark\nfrom pyspark.ml.classification import LogisticRegression\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator\n\nlr = LogisticRegression(labelCol=\"label\",featuresCol=\"features\",maxIter=10,regParam=0.3)\n\nmodel = lr.fit(dftrain_transform)\n\nprediction = model.transform(dftest_transform)\n\ngetMetrics(prediction).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180208-090534_833371286","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63329"},{"text":"%md\nParametreleri değiştirerek modeli eğitelim. Threshold değerini 0.35 olarak verelim.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180208-123735_1893949338","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63330"},{"text":"%pyspark\nlr = LogisticRegression(labelCol=\"label\",featuresCol=\"features\",maxIter=10,regParam=0.3, threshold=0.35)\n\nmodel = lr.fit(dftrain_transform)\n\nprediction = model.transform(dftest_transform)\n\ngetMetrics(prediction).show()","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180208-123732_340867553","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63331"},{"text":"%md\n### SORU- 3\n\nsoru - 2 de kullandığnız özelikleri (feature vector) lojistik regresyon sınıflandırıcısı kullanarak model , oluşturup perfromansını ökçünüz.\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180208-092030_1496557879","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63332"},{"text":"%pyspark\n\nlr = LogisticRegression( ..... )\n\nmodel = lr.fit(.....)\n\nprediction = model.transform(....)\n\ngetMetrics(prediction).show()\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180208-134431_1344035441","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63333"},{"text":"%md\n### SORU - 4 \nBu çalışma nın sonunda elde ettiğiniz bilgileri bir rapor/sunum haline getiriniz. Ana başlıkları aşağıdaki gibi kullanabilirsiniz.\n\n","dateUpdated":"2018-02-09T10:24:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180209-052557_1866689772","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63334"},{"text":"%md\n## < Raporun Başlığı >\n\n### Özet\nAnaliz kapsamı çalışması kapsamında çözüm bulmaya çalıştığınız probleminizi, sorularınızı  ve bulgularınızı 1 kısa paragrafta özetleyin (en fazla 4-6 cümle). Özet kısmında hangi veri setini, hangi soruyu, hangi yöntemi kullandığını ve bulguları kısaca yazınız.\n\n### Motivasyon\nVeriyle çözmek istediğiniz problemi açıklayınız. Hedefiniz, kitlenizin çözmeye çalıştığınız proje / sorunla ilgilenmesini sağlamaktır. Keşfedilen sorunun ve nedeninin (ve kime) anliz çalışmasının değerli olduğunu belirtmeniz gerekir.\n\n### Veri Seti\nVeri setini burada açıklayınız. Veri kümesindeki hangi verilerin olduğunu, ne kadar verinin olduğunu ve veri kümesini nerede bulduğunuzu (varsa) yazınız.\n\n### Veri Hazırlama ve Temizleme\nVerileri analiz için hazırlamak için ne yapmanız gerekiyor? Varsa, hangi veri kümesiyle karşılaştığınız sorunları tanımlayınız.\n\n### Araştırma Konusu\nVeri setini kullanarak cevaplamayı amaçladığınız araştırma sorunuz nedir? Araştırma sorununun iyi tanımlanmış olduğundan emin olunuz (ayrıntılar için proje açıklamasına bakın).\n\n### Yöntem\nVerileri analiz etmek için hangi yöntemleri kullandınız ve neden bunları uygun buldunuz? Yöntemlerinizi  yeterli derecede (kısa olmak kayyadıyla) tarif ediniz.\n\n### Bulgular\nBulgularınızı anlatın. Raporunuza en az bir görselleştirme ekleyiniz (daha fazla bilgi ekleyebilirsiniz). Genel bir izleyici için görselleştirme doğru, erişilebilir ve zarif olmalıdır.\nKesin bir sonuca varmanız gerekmese de bulgularınızın araştırma sorunuzla nasıl ilişkili olduğunu anlatmalısınız.\n\n### Kısıtlar\nMümkünse, bulgularınıza kısıtlarınızı yazınız. Örneğin, bu sonuçların Tayvan banka müşterileriiçin geçerli olduğunu, ancak banka  yapılarındaki farklılıklardan dolayı diğer bankalara uygulanamayabilir olduğunu unutmayınız.\n\n### Değerlendirmeler\nGenel sonuçlarınızı ve değerlendirmelerinizi yazınız.\n\n### Teşekkür\nVerilerinizi nereden buldunuz? Çalışmalarınızı bilgilendirmek için diğer gayrı resmi analiz kullandınız mı? Arkadaşlarınız veya meslektaşlarınız tarafından çalışmalarınız hakkında geribildirim aldınız mı? \n\n### Referanslar\nMümkünse, çalışmalarınızda kullandığınız referansları yazınız.","dateUpdated":"2018-02-09T10:24:20+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518171860157_1403617841","id":"20180209-061820_1384128821","dateCreated":"2018-02-09T10:24:20+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63335"}],"name":"Kredi_Risk_Degerlendirme","id":"2D6W3425F","angularObjects":{"2D7AXJVJ6:shared_process":[],"2D5QRJAX7:shared_process":[],"2D8DCFT6F:shared_process":[],"2D6N1TYJ5:shared_process":[],"2D63CWZH8:shared_process":[],"2D8DWXN2T:shared_process":[],"2D6HMXR6W:shared_process":[],"2D7CRF2U2:shared_process":[],"2D5GSJ42D:shared_process":[],"2D4Y9X7YV:shared_process":[],"2D8MS71ZX:shared_process":[],"2D6MH2CK8:shared_process":[],"2D8V7JEGW:shared_process":[],"2D565C2S6:shared_process":[],"2D5Q366XZ:shared_process":[],"2D5DNUDKE:shared_process":[],"2D76Q8SK4:shared_process":[],"2D6YCG64C:shared_process":[],"2D8779NRN:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}